import { div, eq, Numeric, string } from '../../src'

describe('div', () => {
	const t = (dividend: Numeric, divisor: Numeric, precision: number, expectation: Numeric) => {
		it(`div(${dividend}, ${divisor}, ${precision}) = ${expectation}`, () => {
			const result = div(dividend, divisor, precision)

			expect(result.toString()).toBe(string(expectation))
			expect(eq(result, expectation)).toBe(true)
		})
	}

	const e = (dividend: Numeric, divisor: Numeric) => {
		it(`div(${dividend}, ${divisor}) should throw`, () => {
			expect(() => div(dividend, divisor)).toThrow(TypeError)
		})
	}

	// Should throw when you try to div by zero
	e(0, 0)
	e(0.1, 0)
	e(1, 0)
	e(10, 0)
	e(-0, 0)
	e(-0.1, 0)
	e(-1, 0)
	e(-10, 0)

	t(1, 1, 40, '1')
	t(-1, 1, 40, '-1')
	t(1, -1, 40, '-1')
	t(-1, -1, 40, '1')
	t('0.00000', '1.000000', 40, '0')
	t(1, '1', 40, '1')
	t(1, '-45', 40, '-0.0222222222222222222222222222222222222222')
	t(1, '22', 40, '0.0454545454545454545454545454545454545455')
	t(1, '6.1915', 40, '0.1615117499798110312525236210934345473633')
	t(1, '-1.02', 40, '-0.9803921568627450980392156862745098039216')
	t(1, '0.09', 40, '11.1111111111111111111111111111111111111111')
	t(1, '-0.0001', 40, '-10000')
	t(1, '8e5', 40, '0.00000125')
	t(1, '9E12', 40, '1.111111111111111111111111111e-13')
	t(1, '1e-14', 40, '100000000000000')
	t(1, '3.345E-9', 40, '298953662.1823617339312406576980568011958146487294')
	t(1, '-345.43e+4', 40, '-2.894942535390672495150971253220624e-7')
	t(1, '-94.12E+0', 40, '-0.0106247343816404589885252868678283042924')
	t(0, '0.001', 40, '0')
	t(0, '111.1111111110000', 40, '0')
	t(-1, 1, 40, '-1')
	t(-0.01, 0.01, 40, '-1')
	t(54, -54, 40, '-1')
	t(9.99, '-9.99', 40, '-1')
	t('0.00023432495704937', '-0.00023432495704937', 40, '-1')
	t(100, 100, 40, '1')
	t(-999.99, '0.01', 40, '-99999')
	t(-1, -0.1, 40, '10')
	t(43534.5435, '0.054645', 40, '796679.3576722481471314850398023606917375789185')
	t('99999', '1', 40, '99999')

	// Precision = 0
	t('999.5', 1, 0, '999')
	t('-999.5', 1, 0, '-999')
	t('998.5', 1, 0, '998')
	t('-998.5', 1, 0, '-998')

	// Precision = 0
	// t('999.5', 1, 0, '1000')
	// t('-999.5', 1, 0, '-1000')
	// t('998.5', 1, 0, '999')
	// t('-998.5', 1, 0, '-999')

	// // Precision = 0
	// t('999.5', 1, 0, '1000')
	// t('-999.5', 1, 0, '-1000')
	// t('999.4', 1, 0, '999')
	// t('-999.4', 1, 0, '-999')
	// t('999.500001', 1, 0, '1000')
	// t('-999.500001', 1, 0, '-1000')
	// t('998.5', 1, 0, '998')
	// t('-998.5', 1, 0, '-998')
	// t('998.6', 1, 0, '999')
	// t('-998.6', 1, 0, '-999')
	// t('998.500001', 1, 0, '999')
	// t('-998.500001', 1, 0, '-999')
})
